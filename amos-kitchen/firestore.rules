rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is admin (you can expand this based on your auth claims)
    function isAdmin() {
      return isAuthenticated() && request.auth.token.admin == true;
    }

    // Customers collection
    match /customers/{customerId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated();

      // Subcollection for preferences
      match /preferences/{preferenceId} {
        allow read: if isAuthenticated();
        allow write: if isAuthenticated();
      }
    }

    // Dishes collection
    match /dishes/{dishId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated();
    }

    // Orders collection
    match /orders/{orderId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated();

      // Subcollection for order items
      match /items/{itemId} {
        allow read: if isAuthenticated();
        allow write: if isAuthenticated();
      }

      // Subcollection for order history
      match /history/{historyId} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated();
        allow update: if false; // History should not be updated
        allow delete: if false; // History should not be deleted
      }
    }

    // Counters collection (for order numbers)
    match /counters/{counterId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }

    // Users collection (if needed for user profiles)
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && request.auth.uid == userId;
      allow delete: if false; // Users shouldn't be deleted through client SDK
    }
  }
}